# API Version and Deployment Type
apiVersion: apps/v1  # Kubernetes API version for Deployment objects
kind: Deployment     # Type of Kubernetes resource
metadata:
  name: api-gateway  # Name of the deployment
  labels:
    app: api-gateway  # Labels for selecting this deployment
spec:
  # Number of pod replicas to maintain
  replicas: 1
  # Label selector to identify which pods are managed by this deployment
  selector:
    matchLabels:
      app: api-gateway
  # Pod template that defines the containers and volumes for each pod
  template:
    metadata:
      labels:
        app: api-gateway  # Must match the selector's matchLabels
    spec:  # Pod specification
      # List of containers in the pod
      containers:
      - name: api-gateway  # Name of the container
        image: api-gateway:local  # Container image to use (local build)
        imagePullPolicy: IfNotPresent  # Only pull if not already present
        ports:
        - containerPort: 80  # Port that the container exposes
        # Environment variables for the container
        env:
        - name: APP_ENV  # Application environment (local, staging, production)
          value: "local"  # Current environment is set to local
        - name: APP_DEBUG
          value: "true"
        - name: APP_URL
          value: "http://localhost:8080"
        - name: DB_CONNECTION
          value: "mysql"
        - name: DB_HOST
          value: "mysql"
        - name: DB_PORT
          value: "3306"
        - name: DB_DATABASE
          value: "api_gateway"
        - name: DB_USERNAME
          value: "root"
        - name: DB_PASSWORD
          value: "root"
        # Resource requirements and limits for the container
        resources:
          # Maximum resources the container can use
          limits:
            cpu: "1"        # 1 CPU core maximum
            memory: "512Mi"  # 512MB RAM maximum
          # Minimum resources guaranteed to the container
          requests:
            cpu: "100m"      # 0.1 CPU core guaranteed
            memory: "256Mi"  # 256MB RAM guaranteed
        # Mount points for volumes in the container
        volumeMounts:
        - name: storage  # Name of the volume to mount
          mountPath: /var/www/html/storage  # Path inside the container
      # Volumes to be mounted in the pod
      volumes:
      - name: storage  # Name of the volume
        emptyDir: {}   # Temporary directory that shares a pod's lifetime
# --- Service Definition ---
# Service exposes the deployment as a network service
apiVersion: v1  # Kubernetes API version for Service objects
kind: Service  # Type of Kubernetes resource
metadata:
  name: api-gateway
spec:
  # Selector to find which pods to expose
  selector:
    app: api-gateway  # Must match the pod template's labels
  # Port configuration for the service
  ports:
    - protocol: TCP          # Network protocol (TCP/UDP)
      port: 80               # Port exposed by the service
      targetPort: 80         # Port on the container to forward traffic to
  # Service type (LoadBalancer exposes the service externally)
  type: LoadBalancer
  # Optional: Specific IP for the load balancer (empty for auto-assignment)
  loadBalancerIP: ""
  # External IPs where the service is accessible
  # externalIPs: Removed loopback address which is not allowed
